gito() {
  git --git-dir=$PWD/$1/.git --work-tree=$PWD/$1 $2
}

rpi() {
  echo 'Will run the command:'
  echo '    sudo arp-scan --localnet | grep "b8:27:eb"'
  sudo arp-scan --localnet | grep "b8:27:eb"
}

pipsi-update() {
  ~/.local/venv/$1/bin/pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs ~/.local/venv/$1/bin/pip install -U
}
_pipsi-update() {
  /bin/ls ~/.local/venv/
}
complete -C _pipsi-update pipsi-update

vigrep() {
  grep --exclude-dir=migrations -Ir $1 . | awk 'BEGIN {FS=":"} {print $1}' | sort | uniq | xargs -o vim -p
}

reposize() {
  curl --silent https://api.github.com/repos/$1/$2 | grep size | awk '{print $2}' | sed 's/.$//' | awk '
    function human(x) {
        s="kMGTEPYZ";
        while (x>=1000 && length(s)>1)
            {x/=1024; s=substr(s,2)}
        return int(x+0.5) substr(s,1,1)
    }
    {gsub(/^[0-9]+/, human($1)); print}'
}

light() {
  curl -X POST http://10.0.0.111:3000/nexa-send -d "command=${1}"
}

empty-frigg-queue() {
  while 1
  do curl --header "x-frigg-worker-token: ${1}" jobs.frigg.io/fetch$2
  done
}

ncugrep() {
  ncu | grep $1 | awk '{print $1}' | xargs -t -n1 ncu --packageFile package.json -u
}

dash() {
  open dash://$1:$2
}

t() {
  todo $@
  sleep 1
  /usr/bin/open -g "xbar://app.xbarapp.com/refreshPlugin?path=/Users/rolf/Library/Application Support/xbar/plugins/todo.10s.sh"
}

tt() {
  cd ~/dev/todo > /dev/null
  go run main.go $@
  /usr/bin/open -g "xbar://app.xbarapp.com/refreshPlugin?path=/Users/rolf/Library/Application\ Support/xbar/plugins/todo.10s.sh"
  cd - > /dev/null
}

aws-profile() {
  if grep "\[profile $1\]" ~/.aws/config > /dev/null; then
    export AWS_PROFILE=$1
  else
    echo "Missing profile $1"
  fi
}

_aws-profile() {
  grep -oE "\[profile ([^]]+)" ~/.aws/config | awk '{print $2}'
}
complete -C _aws-profile aws-profile

search() {
  open "https://duckduckgo.com/?q=$1"
}

tx() {
  if [ -z ${1+x} ]; then
    session=$(tmux list-sessions | fzf | awk '{print $1}' | sed 's/:$//' )
    tmux a -t $session
  else
    if tmux list-sessions | grep $1 2>&1 > /dev/null; then
      tmux a -t $1
    else
      tmux new -s $1
    fi
  fi
}

_tx() {
  sessions=$(tmux list-sessions 2>/dev/null)
  if [[ -z "$1" ]]; then
     echo $sessions | awk '{split($0,a,":"); print a[1]}'
  else
    echo $sessions | awk '{split($0,a,":"); print a[1]}' | grep --color=never $1
  fi
}

complete -C _tx tx
